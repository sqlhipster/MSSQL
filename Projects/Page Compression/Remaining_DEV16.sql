

create table #tempTime
(
	DatabaseName	nvarchar(50),
	StartTime		datetime,
	EndTime			datetime,
	TimeDifference	AS	datediff(mi, StartTime, EndTime)
)
insert into #tempTime (DatabaseName, StartTime) values ('PROD_ETLTEST', getdate())
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[APFCASE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[APFCOLT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[AUDITS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[AUTO_COUNT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[BUREAU_CODE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[BUREAU_HEADER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[BUREAU_RATE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[BUREAU_SCOREREASONS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[BUREAU_SCOREREASONS_temp] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[BUREAU_SEG] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[BUREAU_SEG_HDR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[Calendar] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CALL_ACTIVITIES] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CARD_ATTR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CODES] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CONFIG_DECISION_REASONS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CONFIG_STIPULATION_DESC] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CONFIG_TERRITORY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CONFIG_XREF_ORIGINATOR_SOURCE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_CHECKLIST_ITEM] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_CONTR_FIN] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_CONTR_OTHER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_DEALER_RESERVE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_DECISION_REASONS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_DECISION_STIP] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_DECISIONS_EVALUATOR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_DECISIONS_PTIDTI] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_PTIDTI] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQ_VERIFY_DATA] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST_ACTIVITY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST_APP_HISTORY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST_AUTO] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST_FINANCE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST_FUNDING] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST_LOAN] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST_ORIGINATOR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[CREDIT_REQUEST_TRADE_IN] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DAILY_WORKLIST] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DAILY_WORKLIST_CUST] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DC] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DM_TIME] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DQ] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DQ_20160525] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DQ_20171011] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DQ_DAILY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DQ_DAILY_Regions] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DQ_ROLL] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[DQ_ROLL2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_BP] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_CA] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_CD] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_CN] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_CO] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_CP] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_CR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_E2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_EF] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_ER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_ES] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_F2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_FA] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_FI] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_FN] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_FU] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_HEADER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_IQ] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_LI] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_PT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EFX_SS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVALUATOR_ORIGINATOR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_APPLNT_SCORE_DETAIL] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_APPLNT_SCORE_SUMMARY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_BUR_TDR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_BURHDR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CHARSTIC] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_COLLAT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT_ADDRESS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT_COLLAT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT_DLRESERVE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT_FINANCE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT_FUNDING] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT_INSURANCE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT_INSURANCE_VERIF] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_CONTRACT_PERSONAL] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_INFO] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_INQ] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_INTERMEDIATE_VALUE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_REQUEST] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_SEQNO] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_SUMMARY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_TOL_RULES] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_TRADE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_TRIGGER_DEC] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVAPP_UW_DEC_AUTO_DECLINE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[EVENT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[HoldingPlace_Accounts] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[HoldingPlace_Accounts_test] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[HoldingPlace_Application] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[HoldingPlace_Dates] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[HoldingPlace_DQ_Productivity] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[HoldingPlace_Negative_Equity] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[HoldingPlace_Rate_variance] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ILDEALER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ILMAST] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ILTRAN] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID_ADDLNAME] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID_AKA] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID_CHRON_HISTORY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID_FOLLOWUP_ACTION] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID_INQUIRY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID_INQUIRY_MODEL] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID_MODEL] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[INSTANTID_RISK_INDICATOR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[LKP_Auto_Website_BlockACH] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MEGA_ORIGINATOR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_ACTIVITY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_ACTIVITY_STATUS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_ADDRESS_TYPE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_APP_STATUS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_AUTO_MAKE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_BOOKING_STATUS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_CREDIT_REQ_AUDIT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_DEBT_PAYMENT_TYPE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_DEBT_TYPE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_EMPLOYMENT_STATUS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_EVALUATOR_DECISION] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_INCOME_BASIS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_INSTANTID_CVI_DESCR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_LOGIN_TYPE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_REQUESTOR_TYPE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_RESIDENCE_STATUS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_STATE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_TIMEZONES] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MSTR_VALUE_GUIDE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[MTD_DATA] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ORIGINATOR_ADDRESS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ORIGINATOR_AGING_STATS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ORIGINATOR_COMMENTS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ORIGINATOR_LOAD] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ORIGINATOR_MISC] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_ADDRESS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_BUREAU_FILES] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_BUREAU_HEADER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_BUREAU_INQUIRY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_BUREAU_PUBLIC_RECORD] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_BUREAU_RATINGS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_BUREAU_RAW_TTY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_BUREAU_SCORECARD_SUM] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_BUREAU_SUMMARY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_EMPLOYER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_EVAPP_BURHDR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_HEADER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_OTHER_INCOME] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[REQUESTOR_SCORECARD_SCORE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[RISK_VIEW] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[RISK_VIEW_ATTRIBUTES] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[RISK_VIEW_INQUIRY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[RISK_VIEW_INQUIRY_MODEL] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[SALES_REP] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[Sales_REP_04132017] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[SALES_REP_20161130] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[SALES_REP_OLD] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[SALES_REP2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[SCACTY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[SCMASTR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[SCMASTR_20131216] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[STERLING_MAST] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[STERLING_ONE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[STERLING_ONE_OLD] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[STERLING_TB_BALANCE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[STERLING_TB_BALANCE_COPY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[sysdiagrams] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TB_BALANCE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TB_BALANCE_COPY] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_AD01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_AO01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_CL01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_CS01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_EM01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_ENDS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_ERRT] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_HEADER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_IN01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_LK01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_MT01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_NM01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_OB01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_PH01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_PI01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_PN01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_PR01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_SA01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_SC01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_SD01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_SH01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_SM01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_TA01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_TM01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_TR01] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_TU4E] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[TRU_TU4R] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[USERS] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[vCRDE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[vCRDR] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_100] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_110] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_125] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_322] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_335] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_336] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_337] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_350] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_357] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_359] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_361] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_365] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_382] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_800] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_850] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_900] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_950] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_A6] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_A7] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_A8] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_A9] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_B1] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_B2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_B3] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_B4] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_B5] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_B6] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_B7] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_B8] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_C2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_C3] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_C4] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_C5] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_C6] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_C7] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_C8] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_C9] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_D1] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_E1] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_E3] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_E5] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_F2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_F3] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_HEADER] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_K1] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_K2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_K3] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_K4] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_K5] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_K6] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_K7] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_K8] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XPN_Y2] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XREF_BUREAU_SCORE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[XREF_EVAL_ORIG_COMM_TYPE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
use PROD_ETLTEST BEGIN TRY ALTER table [dbo].[ZIPCODE] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE) END TRY BEGIN CATCH print error_message() END CATCH
update #tempTime set EndTime = getdate() where DatabaseName = 'PROD_ETLTEST'
select * from #temptime 


select * from #tempTime
drop table #tempTime